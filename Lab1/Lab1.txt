
DUVIDAS:
    2.3.3 b) no grafico "Compulsory,Capacity,Conflict Miss-Rates[%]" as coisas devem somar para 100%?
            percentagem absoluta ou relativa?
    
    2.4.2 c) tMissL2 já contem tMissL1 ou nao ?

    2.4.2 b)



2.1 - The critical sequence of accesses which may have a larger impact on the performance of the system is the macroblock processing.

2.3.1.1 - Compulsory miss: A miss that happens after the first access to a block (e.g. after booting), so it must be brought into the cache.
          Capacity miss: A miss that happens when the cache cannot contain all blocks needed for a program and they end up being discarded before the access (more common in associative mapped caches)
          Conflict miss: A miss that happens when two or more memory addresses map to the same cache block (more common in direct mapped caches, fixable by using a fully associative cache)

(extra)
capacity -> guardei 5 coisas, 4 foram substituidas pq nao havia espaco na cache e tentei ler denovo as 5 coisas, deu miss
conflit -> guardei no 0x0 , outro tbm guardou no 0x0, fui ao 0x0 e ja nao estava la o que guardei inicialmente

2.3.1.2 When receiving data:
        - Write-through: Both the cache and the memory are updated
        - Write-back: Only the cache is updated. The memory is updated only when the data is replaced in cache.
        - Write-allocate: The data is loaded from the memory into the cache, updated and finally sent back to the memory (just before its replacement when used with write-back - more commonly - or immediately when used with write-through)
        - Write-around: Only the main memory is updated (normally used when the data is not relevant at the moment)

2.3.2
    a)  Device       Technology     Access Time [ns]                 Price [€ / MByte]
        Cache L1     SRAM (on-chip) 2 × [0.7 + 0.35 × log 2 (#ways)] 9
        Frame Memory SDRAM          140                              0.01

        SRAM has a capacity of 128 kBytes
        Max cost: 0.018€ (for both cache L1 and frame memory)

        1 MB - 1024 KB 
        X MB - 128 KB
        X = 128/1024 = 1/8 MB

        The price for the frame memory is 1/8*0.01 = 0.00125€

        Therefore we have 0.01675€ to spend in Cache L1

        9 €       - 1 Mb
        0.01675 € - X MB
        X = 0.01675/9 = 0.00186(1) MB = 1.905(7) KB

        Because L1_size = 2^MAX, the closest value to 1.905(7) KB is 1024 B = 2^10 Bytes with Max=10

    b)
            1024   512    256    
        8   0.0305 0.1247 0.1960
        16  0.0363 0.1184 0.1829
        32  0.0770 0.1492 0.2288
        64  0.1181 0.2021 0.3340
     Price  0.0088 0.0044 0.0022

    9 € - 1048576 B
    X € - lsize B 
    X = 9*lsize/1048576

    d)
        Trade offer between cost and average miss-rate 
        Cost = Price x Miss-Rate


2.3.3
    c)

    d) mean access time -> cache hit rate, cache miss rate,
                           cache hit time, cache miss time,
                           time penalty

        MAT = Ph*Th + Pm*Tm = 
            = Ph*(2 × [0.7 + 0.35 × log 2 (#ways)]) + Pm*(2 × [0.7 + 0.35 × log 2 (#ways)]+140)


    e)


        Access Time = (2 × [0.7 + 0.35 × log 2 (#ways)]) 
        ways 1
             2
             4
             8
        Price = 0.0088
        Cost = Price * Miss Rate

    f)
        The best configuration for the L1 cache is with a 4-way associativity.




2.3.4
    a)





2.4
    a) 
    
    0.018 - 0.0100390625 = 0.0079609375

    0.4 €       - 1 Mb
    0.0079609375  € - X MB 
    X = 0.0079609375*2^20/0.4 = 20869.12 Bytes > 2^14 Bytes = 16384 => Max = 14

    b)
    lsize = 16384
    block size l1 = 16
    block sizes = 16,32,64,128

    16  0.4733
    32  0.2386
    64  0.1193
    128 0.0598

    c) GRAPH

    d) 
    The time penalty associated with each data fetch from the primary memory does not vary with
    the block size. Therefore we can chose the block size with the least average miss-rate.

2.4.2

    a)
        avg miss rate 0.0598
        Compulsory 0.3741  * 0.0598 = 0.02234118
        capacity 0.6259 * 0.0598 = 0.03742882
        conflit   0

    b) GRAPH

    c) 
    Thit1 + Pmiss1 * Tmiss1 
    Tmiss1 = Thit2 + Pmiss2 * Tmiss2

    => T = Thit1 + Pmiss1 * (Thit2 + Pmiss2 * Tmiss2)

    d) 



    miss rate 0.0598

    access time = Thit1 + Pmiss1 * ( Thit2 + Pmiss2 * Tmiss2)


    2 × [0.7 + 0.35 × log 2 (#ways)] + Pmiss1 * (10 × [0.7 + 0.55 × log 2 (#ways)] + Pmiss*140)
    #waysL1 = 4
    #waysL2 = 1
    #Pmiss1 = 0.0016
    #Pmiss2 = 0.0598

    2×[0.7+0.35×log2(4)]+0.0016*(10×[0.7+0.55×log2(1)]+0.0598*140) = 2.8246




    Price = L2 0.4/MB L1 9/MB

    MAIN: 0.00125€
    L1: 0.0100390625€    2^10 Bytes => 2^-10 MB * 9 = 0.008789
    L2: 0.0067109375€    2^14 Bytes => 2^-6 MB * 0.4 = 0.00625


    TOTAL: 0.00125 + 0.008789 + 0.00625 = 0.016289


    Cost = 2.8246 * 0.016289 = 0.04601


2.5
    a)
          Cache L1    Cache L2    Frame-Memory
D           2^10        2^14          128*1024
B           16          128
Ass          4           1
Wr           writing through and not alocate 
LocalMR     0.16%    5.98%
Price       0.008789   0.00625
GlobalMR    0.0016 * 0.0598 = 9.568*10^-5 = 0.009568%
GlobalAc    2.8246
TotalPrice  0.016289
Cost        0.04601





    








        

        


    

            


            

